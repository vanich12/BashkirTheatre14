<UserControl x:Class="BashkirTheatre14.View.Controls.Map.MapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BashkirTheatre14.View.Controls"
             xmlns:components="clr-namespace:BashkirTheatre14.View.Components"
             xmlns:viewModels="clr-namespace:MapControlLib.ViewModels;assembly=MapControlLib"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:components1="clr-namespace:MapControlLib.Components;assembly=MapControlLib"
             xmlns:map="clr-namespace:BashkirTheatre14.View.Controls.Map"
             xmlns:map1="clr-namespace:BashkirTheatre14.ViewModel.Controls.Map"
             xmlns:popups="clr-namespace:BashkirTheatre14.View.Popups"
             mc:Ignorable="d" 
             Height="1826" Width="1668"
             d:DataContext="{d:DesignInstance map1:MapControlViewModel}">
    <UserControl.Resources>
        <Style TargetType="components:RoundedButton" x:Key="BottomButtonsStyle" BasedOn="{StaticResource AlterButtonStyle}">
            <Setter Property="Opacity" Value="0"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="70 20"/>
            <Setter Property="CornerRadius" Value="40"/>
            <Style.Triggers>
                <Trigger Property="Opacity" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate TargetType="ButtonBase" x:Key="MapToolButtonTemplate">
            <Border
            CornerRadius="24"
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}">
                <ContentPresenter Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="Center"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="Center"/>
            </Border>
        </ControlTemplate>

        <Style TargetType="components:RoundedButton" BasedOn="{StaticResource AlterButtonStyle}" x:Key="BaseMapToolButtonStyle">
            <Setter Property="Width" Value="140"/>
            <Setter Property="Height" Value="140"/>
            <Setter Property="Template" Value="{StaticResource MapToolButtonTemplate}"/>
            <Setter Property="Padding" Value="42"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowOverlay}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="components:RoundedButton" BasedOn="{StaticResource BaseMapToolButtonStyle}" x:Key="MapToolButtonStyle">
            <Setter Property="Background" Value="{StaticResource MainFillBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryBackgroundBrush}"></Setter>
        </Style>

        <Style TargetType="components:RoundedButton" BasedOn="{StaticResource BaseMapToolButtonStyle}" x:Key="AlterMapToolButtonStyle">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundBrush}"/>
        </Style>

        <DataTemplate x:Key="FloorListItemTemplate" DataType="{x:Type viewModels:FloorViewModel}">
            <TextBlock Text="{Binding Floor.Name}"
                   Style="{StaticResource HeaderStyle}"
                   FontSize="48"
                   FontWeight="Bold"
                   Foreground="{Binding Foreground,RelativeSource={RelativeSource FindAncestor,AncestorType=Control}}"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"/>
        </DataTemplate>

        <Style TargetType="ListBoxItem" x:Key="FloorListItemStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="0 0 0 20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="24"
                        Width="140"
                        Height="140">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard
                        Storyboard="{StaticResource LisBoxItemSelectedForeground}"/>
                        <BeginStoryboard
                        Storyboard="{StaticResource ListBoxItemSelectedBackground}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard
                        Storyboard="{StaticResource ListBoxItemUnselectedForeground}"/>
                        <BeginStoryboard
                        Storyboard="{StaticResource LisBoxItemUnselectedBackground}"/>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <StackPanel>
        <Border
            Background="#412A47"
            Width="1668"
            Height="1668"
            CornerRadius="40">
            <Grid>
                <Border
                     CornerRadius="32"
                     Background="#412A47"
                     Panel.ZIndex="2">
                    <Border.Style>
                        <Style TargetType="Border" BasedOn="{StaticResource HiddenElementStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowOverlay}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard
                                 Storyboard="{StaticResource ShowHalfOpacityStoryboard}"/>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard
                                 Storyboard="{StaticResource HideHalfOpacityStoryboard}"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <Border Background="Transparent"
                        Panel.ZIndex="4">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Map.IsNavigating}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <ContentControl Content="{Binding MapObjectPopup}"
                     Panel.ZIndex="4"
                     VerticalAlignment="Center">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Opacity" Value="0"/>
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <Trigger Property="Opacity" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding MapObjectPopup.IsOpen}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource ShowOpacityStoryBoard}"/>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource HideOpacityStoryBoard}"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <ListBox ItemsSource="{Binding Map.Floors}"
                          ItemTemplate="{StaticResource FloorListItemTemplate}"
                          VerticalAlignment="Bottom"
                          Panel.ZIndex="4"
                          HorizontalAlignment="Left"
                          Margin="40"
                          SelectedItem="{Binding Map.SelectedFloor}"
                          ItemContainerStyle="{StaticResource FloorListItemStyle}">
                    <ListBox.Style>
                        <Style TargetType="ListBox">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBox">
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowOverlay}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                </ListBox>

                <StackPanel
                     VerticalAlignment="Bottom"
                     HorizontalAlignment="Right"
                     Panel.ZIndex="4"
                     Margin="40">
                    <components:RoundedButton Style="{StaticResource AlterMapToolButtonStyle}"
                        ContentTemplate="{StaticResource PlusIcon}"
                        Command="{Binding Map.ZoomInCommand}"/>
                    <components:RoundedButton Style="{StaticResource AlterMapToolButtonStyle}"
                         Margin="0 20"
                         ContentTemplate="{StaticResource MinusIcon}"
                         Command="{Binding Map.ZoomOutCommand}"/>

                    <components:RoundedButton Style="{StaticResource MapToolButtonStyle}"
                        ContentTemplate="{StaticResource MapArrowIcon}"
                        Command="{Binding Map.MoveToTerminalCommand}"
                        CommandParameter="4"/>
                </StackPanel>

                <popups:Loader 
                    Visibility="{Binding IsLoading,Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <components1:ZoomableContentControl
                     x:Name="ZoomableContentControl"
                     ZoomMin="1"
                     Visibility="{Binding IsLoading,Converter={StaticResource InvertBooleanToVisibilityConverter}}"
                     AnimationDuration="0:0:0.2">
                    <components1:ZoomableContentControl.Style>
                        <Style TargetType="components1:ZoomableContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowOverlay}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard
                                                TargetProperty="(Panel.ZIndex)">
                                                <Int32Animation
                                                     Duration="0"
                                                     To="3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard
                                                TargetProperty="(Panel.ZIndex)">
                                                <Int32Animation Duration="0"
                                                                BeginTime="0:0:0.25"
                                                                To="0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </components1:ZoomableContentControl.Style>
                    <components1:ZoomableContentControl.Clip>
                        <RectangleGeometry Rect="0 0 1668 1668"
                                RadiusX="40"
                                RadiusY="40"/>
                    </components1:ZoomableContentControl.Clip>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <b:InvokeCommandAction Command="{Binding LoadMapCommand}"
                                                   CommandParameter="{Binding ElementName=ZoomableContentControl}"/>
                        </b:EventTrigger>
                        <b:DataTrigger Binding="{Binding Map.SelectedFloor.AreaSelected}"
                                       Value="True">
                            <b:CallMethodAction TargetObject="{Binding ElementName=ZoomableContentControl}"
                     MethodName="ResetOffset"/>
                        </b:DataTrigger>
                    </b:Interaction.Triggers>
                    <map:FloorView DataContext="{Binding Map.SelectedFloor}"/>
                </components1:ZoomableContentControl>
                <StackPanel
                     VerticalAlignment="Bottom"
                     Orientation="Horizontal"
                     HorizontalAlignment="Center"
                     Panel.ZIndex="4"
                     Margin="40">
                    <components:RoundedButton
                         Command="{Binding Map.NextTransitionCommand}"
                         Margin="0 0 32 0">
                        <components:RoundedButton.Content>
                            <TextBlock>
                                 <Run Text="ПЕРЕЙТИ"/>
                                 <Run Text="{Binding Map.CurrentTransition.Floor.Name}"/>
                                 <Run Text="ЭТАЖ"/>
                            </TextBlock>
                        </components:RoundedButton.Content>
                        <components:RoundedButton.Style>
                            <Style TargetType="components:RoundedButton" BasedOn="{StaticResource BottomButtonsStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Map.HaveTransitions}"
                                      Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard
                                                Storyboard="{StaticResource ShowOpacityStoryBoard}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard
                                            Storyboard="{StaticResource HideOpacityStoryBoard}"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </components:RoundedButton.Style>
                    </components:RoundedButton>
                    <components:RoundedButton 
                             Command="{Binding Map.CancelNavigationCommand}"
                             Content="ЗАВЕРШИТЬ МАРШРУТ">
                        <components:RoundedButton.Style>
                            <Style TargetType="components:RoundedButton" BasedOn="{StaticResource BottomButtonsStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Map.IsNavigating}"
                                                Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard
                                     Storyboard="{StaticResource ShowOpacityStoryBoard}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard
                                     Storyboard="{StaticResource HideOpacityStoryBoard}"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </components:RoundedButton.Style>
                    </components:RoundedButton>
                </StackPanel>
            </Grid>
        </Border>
        <Button Margin="0 38 0 0"
                Height="120"
                Background="#412A47"
                Command="{Binding ToSearchMapObjectPopupCommand}">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="40"
                            Background="{TemplateBinding Background}">
                        <Grid
                            Margin="60 35">
                            <TextBlock Style="{StaticResource DescriptionTextStyle}"
                                       Text="Найти на карте..."
                                       Foreground="White"
                                       Opacity="0.5"
                                       FontSize="40"/>
                            <ContentControl ContentTemplate="{StaticResource SearchIcon}"
                                            Foreground="White"
                                            HorizontalAlignment="Right"
                                            Width="36"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </StackPanel>
</UserControl>
